import streamlit as st
import sqlite3
import pandas as pd
import plotly.express as px

st.title("游늵 Estatus de Asistentes por Coach")

# **Conectar a la base de datos**
DB_PATH = "/Users/robertobastarracheamedina/Desktop/MBW STUFF/CODIGO MBW/Registro de Asistencias/data/asistencias.db"
CLIENTES_DB_PATH = "/Users/robertobastarracheamedina/Desktop/MBW STUFF/CODIGO MBW/Registro de Asistencias/data/clientes_mbw.db"

# **Cargar datos de asistencias**
conn = sqlite3.connect(DB_PATH)
query_asistencias = 'SELECT DISTINCT "Nombre del Alumno", Coaches FROM asistencias'
asistencias_df = pd.read_sql(query_asistencias, conn)
conn.close()

# **Cargar datos de clientes**
conn_clientes = sqlite3.connect(CLIENTES_DB_PATH)
query_clientes = "SELECT nombre, estatus, tipo_plan FROM clientes"
clientes_df = pd.read_sql(query_clientes, conn_clientes)
conn_clientes.close()

# **Unir datos de asistencias con clientes 칰nicos**
df = pd.merge(asistencias_df, clientes_df, left_on="Nombre del Alumno", right_on="nombre", how="inner")

# **Contar clientes 칰nicos por coach y estatus**
estatus_coach_df = df.groupby(['Coaches', 'estatus'])['nombre'].nunique().reset_index()
estatus_coach_df.columns = ['Coach', 'Estatus', 'N칰mero de Clientes 칔nicos']

# **游늵 Gr치fico de Clientes 칔nicos por Estatus y Coach**
st.subheader("游늵 Clientes 칔nicos Activos, Sin Renovar y en Baja por Coach")
fig_estatus_coach = px.bar(estatus_coach_df, x='Coach', y='N칰mero de Clientes 칔nicos', color='Estatus',
                            title='Clientes 칔nicos por Estatus y Coach',
                            labels={'N칰mero de Clientes 칔nicos': 'N칰mero de Clientes 칔nicos', 'Estatus': 'Estatus del Cliente'},
                            barmode='stack')
st.plotly_chart(fig_estatus_coach, use_container_width=True)

# **游늳 Evoluci칩n del Estatus de Clientes 칔nicos por Coach**
st.subheader("游늳 Evoluci칩n del Estatus de Clientes 칔nicos por Coach")
fig_evolucion = px.bar(estatus_coach_df, x='Coach', y='N칰mero de Clientes 칔nicos', color='Estatus',
                         title='Tendencia de Clientes 칔nicos por Estatus y Coach',
                         labels={'N칰mero de Clientes 칔nicos': 'N칰mero de Clientes 칔nicos', 'Estatus': 'Estatus del Cliente'},
                         barmode='group')
st.plotly_chart(fig_evolucion, use_container_width=True)

# **游늶 Tabla Resumida del Estatus de Clientes 칔nicos por Coach**
st.subheader("游늶 Tabla Resumida del Estatus de Clientes 칔nicos por Coach")
tabla_resumida = df.pivot_table(index='Coaches', columns='estatus', values='nombre', aggfunc='nunique', fill_value=0)
st.dataframe(tabla_resumida, use_container_width=True)

st.write("游늷 Esta visualizaci칩n muestra el n칰mero real de clientes 칰nicos asignados a cada coach, evitando la inflaci칩n de n칰meros por asistencias repetidas.")
